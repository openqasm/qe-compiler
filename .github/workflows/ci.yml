name: Continuous Integration
on: [push]
jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      CONAN_USER_HOME: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # -- REMOVE ONCE OPEN SOURCE
      # Needed until Qiskit/qss-qasm is public.
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pip packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Create Conan default profile
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - name: Export QSSC_VERSION from Git version tag
        run: |
          version=`python -c "from setuptools_scm import get_version; print(get_version())"`
          echo "QSSC_VERSION=$version" >> $GITHUB_ENV
      - name: Try load Conan cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: .conan
          key: conan-${{ runner.os }}-${{ hashFiles('conandata.yml', 'conanfile.py', 'conan/**/*.py', 'conan/**/*.yml') }}
          restore-keys: conan-${{ runner.os }}
      - name : Print cache hit/miss
        run: |
          echo "Cache was hit: ${{ steps.cache.outputs.cache-hit }}"
      # If we have a cache miss on 'main', clear the cache.
      # A dependency was updated, so we need to drop the old one
      # to prevent unbounded cache growth over time.
      - name : Clear Conan cache
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.cache.outputs.cache-hit != 'true'
        run: |
          rm -rf ./.conan
      - name: Add QASM, LLVM, and clang tools recipes to Conan cache.
        run: ./conan_deps.sh
      - name: Build QSS compiler Conan package
        id: build
        run: |
          export CONAN_LLVM_GIT_CACHE="${{ runner.temp }}/llvm-project"
          mkdir build && cd build
          conan install --build=outdated ..
          conan build ..
          ninja check-tests
      # On 'main' branch, always save the cache if Conan build succeeded.
      # Note: we only update the cache from 'main' to avoid "cache thrashing", which would result in the 'main'
      #       cache getting LRU-evicted for every PR, since a single run uses most of the 10GB repo limit.
      - uses: actions/cache/save@v3
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.build.outcome == 'success'
        with:
          path: .conan
          key: conan-${{ runner.os }}-${{ hashFiles('conandata.yml', 'conanfile.py', 'conan/**/*.py', 'conan/**/*.yml') }}